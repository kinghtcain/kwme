<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alphatheta.kw.daos.LagouJobMapper" >
  <resultMap id="BaseResultMap" type="com.alphatheta.kw.entities.LagouJob" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="job_offer_name" property="jobOfferName" jdbcType="VARCHAR" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="job_request" property="jobRequest" jdbcType="VARCHAR" />
    <result column="job_payment" property="jobPayment" jdbcType="VARCHAR" />
    <result column="job_publish_time" property="jobPublishTime" jdbcType="VARCHAR" />
    <result column="job_address" property="jobAddress" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.alphatheta.kw.entities.LagouJob" extends="BaseResultMap" >
    <result column="job_description" property="jobDescription" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, job_id, job_offer_name, job_name, job_request, job_payment, job_publish_time, 
    job_address
  </sql>
  <sql id="Blob_Column_List" >
    job_description
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.alphatheta.kw.entities.LagouJobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from kw_lagou_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.alphatheta.kw.entities.LagouJobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kw_lagou_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from kw_lagou_job
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from kw_lagou_job
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.alphatheta.kw.entities.LagouJobExample" >
    delete from kw_lagou_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.alphatheta.kw.entities.LagouJob" >
    insert into kw_lagou_job (id, job_id, job_offer_name, 
      job_name, job_request, job_payment, 
      job_publish_time, job_address, job_description
      )
    values (#{id,jdbcType=VARCHAR}, #{jobId,jdbcType=INTEGER}, #{jobOfferName,jdbcType=VARCHAR}, 
      #{jobName,jdbcType=VARCHAR}, #{jobRequest,jdbcType=VARCHAR}, #{jobPayment,jdbcType=VARCHAR}, 
      #{jobPublishTime,jdbcType=VARCHAR}, #{jobAddress,jdbcType=VARCHAR}, #{jobDescription,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.alphatheta.kw.entities.LagouJob" >
    insert into kw_lagou_job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="jobOfferName != null" >
        job_offer_name,
      </if>
      <if test="jobName != null" >
        job_name,
      </if>
      <if test="jobRequest != null" >
        job_request,
      </if>
      <if test="jobPayment != null" >
        job_payment,
      </if>
      <if test="jobPublishTime != null" >
        job_publish_time,
      </if>
      <if test="jobAddress != null" >
        job_address,
      </if>
      <if test="jobDescription != null" >
        job_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="jobOfferName != null" >
        #{jobOfferName,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobRequest != null" >
        #{jobRequest,jdbcType=VARCHAR},
      </if>
      <if test="jobPayment != null" >
        #{jobPayment,jdbcType=VARCHAR},
      </if>
      <if test="jobPublishTime != null" >
        #{jobPublishTime,jdbcType=VARCHAR},
      </if>
      <if test="jobAddress != null" >
        #{jobAddress,jdbcType=VARCHAR},
      </if>
      <if test="jobDescription != null" >
        #{jobDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.alphatheta.kw.entities.LagouJobExample" resultType="java.lang.Integer" >
    select count(*) from kw_lagou_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update kw_lagou_job
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.jobId != null" >
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.jobOfferName != null" >
        job_offer_name = #{record.jobOfferName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobName != null" >
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobRequest != null" >
        job_request = #{record.jobRequest,jdbcType=VARCHAR},
      </if>
      <if test="record.jobPayment != null" >
        job_payment = #{record.jobPayment,jdbcType=VARCHAR},
      </if>
      <if test="record.jobPublishTime != null" >
        job_publish_time = #{record.jobPublishTime,jdbcType=VARCHAR},
      </if>
      <if test="record.jobAddress != null" >
        job_address = #{record.jobAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.jobDescription != null" >
        job_description = #{record.jobDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update kw_lagou_job
    set id = #{record.id,jdbcType=VARCHAR},
      job_id = #{record.jobId,jdbcType=INTEGER},
      job_offer_name = #{record.jobOfferName,jdbcType=VARCHAR},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_request = #{record.jobRequest,jdbcType=VARCHAR},
      job_payment = #{record.jobPayment,jdbcType=VARCHAR},
      job_publish_time = #{record.jobPublishTime,jdbcType=VARCHAR},
      job_address = #{record.jobAddress,jdbcType=VARCHAR},
      job_description = #{record.jobDescription,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update kw_lagou_job
    set id = #{record.id,jdbcType=VARCHAR},
      job_id = #{record.jobId,jdbcType=INTEGER},
      job_offer_name = #{record.jobOfferName,jdbcType=VARCHAR},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_request = #{record.jobRequest,jdbcType=VARCHAR},
      job_payment = #{record.jobPayment,jdbcType=VARCHAR},
      job_publish_time = #{record.jobPublishTime,jdbcType=VARCHAR},
      job_address = #{record.jobAddress,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.alphatheta.kw.entities.LagouJob" >
    update kw_lagou_job
    <set >
      <if test="jobId != null" >
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="jobOfferName != null" >
        job_offer_name = #{jobOfferName,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null" >
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobRequest != null" >
        job_request = #{jobRequest,jdbcType=VARCHAR},
      </if>
      <if test="jobPayment != null" >
        job_payment = #{jobPayment,jdbcType=VARCHAR},
      </if>
      <if test="jobPublishTime != null" >
        job_publish_time = #{jobPublishTime,jdbcType=VARCHAR},
      </if>
      <if test="jobAddress != null" >
        job_address = #{jobAddress,jdbcType=VARCHAR},
      </if>
      <if test="jobDescription != null" >
        job_description = #{jobDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.alphatheta.kw.entities.LagouJob" >
    update kw_lagou_job
    set job_id = #{jobId,jdbcType=INTEGER},
      job_offer_name = #{jobOfferName,jdbcType=VARCHAR},
      job_name = #{jobName,jdbcType=VARCHAR},
      job_request = #{jobRequest,jdbcType=VARCHAR},
      job_payment = #{jobPayment,jdbcType=VARCHAR},
      job_publish_time = #{jobPublishTime,jdbcType=VARCHAR},
      job_address = #{jobAddress,jdbcType=VARCHAR},
      job_description = #{jobDescription,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alphatheta.kw.entities.LagouJob" >
    update kw_lagou_job
    set job_id = #{jobId,jdbcType=INTEGER},
      job_offer_name = #{jobOfferName,jdbcType=VARCHAR},
      job_name = #{jobName,jdbcType=VARCHAR},
      job_request = #{jobRequest,jdbcType=VARCHAR},
      job_payment = #{jobPayment,jdbcType=VARCHAR},
      job_publish_time = #{jobPublishTime,jdbcType=VARCHAR},
      job_address = #{jobAddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>